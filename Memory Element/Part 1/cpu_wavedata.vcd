$date
	Thu Mar  3 23:22:37 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module regfile $end
$var reg 8 ! \registers[0] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module regfile $end
$var reg 8 " \registers[1] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module regfile $end
$var reg 8 # \registers[2] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module regfile $end
$var reg 8 $ \registers[3] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module regfile $end
$var reg 8 % \registers[4] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module regfile $end
$var reg 8 & \registers[5] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module regfile $end
$var reg 8 ' \registers[6] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module regfile $end
$var reg 8 ( \registers[7] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$var wire 32 ) PC [31:0] $end
$var reg 1 * CLK $end
$var reg 32 + INSTRUCTION [31:0] $end
$var reg 1 , RESET $end
$scope module mycpu $end
$var wire 1 * CLK $end
$var wire 32 - INSTRUCTION [31:0] $end
$var wire 1 , RESET $end
$var wire 8 . negative [7:0] $end
$var wire 1 / ZERO $end
$var wire 1 0 WRITEENABLE $end
$var wire 8 1 WRITEDATA [7:0] $end
$var wire 1 2 WRITE $end
$var wire 8 3 ToMUX2 [7:0] $end
$var wire 1 4 SIGN $end
$var wire 32 5 SHIFTED [31:0] $end
$var wire 8 6 REGOUT2 [7:0] $end
$var wire 8 7 REGOUT1 [7:0] $end
$var wire 8 8 READDATA [7:0] $end
$var wire 1 9 READ $end
$var wire 2 : PC_SELECTOR [1:0] $end
$var wire 32 ; PC [31:0] $end
$var wire 1 < IMMEDIATE $end
$var wire 32 = EXTENDED [31:0] $end
$var wire 1 > DATAMEM $end
$var wire 1 ? BUSYWAIT $end
$var wire 8 @ ALUOUT [7:0] $end
$var wire 3 A ALUOP [2:0] $end
$var wire 8 B ALUIN1 [7:0] $end
$var reg 8 C IMMEDIATEVal [7:0] $end
$var reg 8 D OFFSET [7:0] $end
$var reg 8 E OPCODE [7:0] $end
$var reg 3 F READREG1 [2:0] $end
$var reg 3 G READREG2 [2:0] $end
$var reg 3 H WRITEREG [2:0] $end
$scope module ALU1 $end
$var wire 8 I temp4 [7:0] $end
$var wire 8 J temp5 [7:0] $end
$var wire 8 K temp6 [7:0] $end
$var wire 8 L temp7 [7:0] $end
$var wire 8 M temp3 [7:0] $end
$var wire 8 N temp2 [7:0] $end
$var wire 8 O temp1 [7:0] $end
$var wire 8 P temp0 [7:0] $end
$var wire 3 Q SELECT [2:0] $end
$var wire 8 R RESULT [7:0] $end
$var wire 8 S DATA2 [7:0] $end
$var wire 8 T DATA1 [7:0] $end
$var reg 1 / ZERO $end
$scope module ADD1 $end
$var wire 8 U result [7:0] $end
$var wire 8 V data2 [7:0] $end
$var wire 8 W data1 [7:0] $end
$upscope $end
$scope module AND1 $end
$var wire 8 X result [7:0] $end
$var wire 8 Y data2 [7:0] $end
$var wire 8 Z data1 [7:0] $end
$upscope $end
$scope module FORWARD1 $end
$var wire 8 [ result [7:0] $end
$var wire 8 \ data [7:0] $end
$upscope $end
$scope module Mux $end
$var wire 8 ] D0 [7:0] $end
$var wire 8 ^ D1 [7:0] $end
$var wire 8 _ D2 [7:0] $end
$var wire 8 ` D4 [7:0] $end
$var wire 8 a D5 [7:0] $end
$var wire 8 b D6 [7:0] $end
$var wire 8 c D7 [7:0] $end
$var wire 3 d Select [2:0] $end
$var wire 8 e D3 [7:0] $end
$var reg 8 f out [7:0] $end
$upscope $end
$scope module OR1 $end
$var wire 8 g result [7:0] $end
$var wire 8 h data2 [7:0] $end
$var wire 8 i data1 [7:0] $end
$upscope $end
$upscope $end
$scope module control $end
$var wire 8 j OPCODE [7:0] $end
$var wire 1 ? BUSYWAIT $end
$var reg 3 k ALUOP [2:0] $end
$var reg 1 > DATAMEM $end
$var reg 1 < IMMEDIATE $end
$var reg 2 l PC_SELECTOR [1:0] $end
$var reg 1 9 READ $end
$var reg 1 4 SIGN $end
$var reg 1 2 WRITE $end
$var reg 1 0 WRITEENABLE $end
$upscope $end
$scope module dataMem1 $end
$var wire 8 m address [7:0] $end
$var wire 1 * clock $end
$var wire 1 9 read $end
$var wire 1 , reset $end
$var wire 1 2 write $end
$var wire 8 n writedata [7:0] $end
$var reg 1 ? busywait $end
$var reg 1 o readaccess $end
$var reg 8 p readdata [7:0] $end
$var reg 1 q writeaccess $end
$var integer 32 r i [31:0] $end
$upscope $end
$scope module mux4Ime $end
$var wire 8 s data2 [7:0] $end
$var wire 1 < select $end
$var wire 8 t data1 [7:0] $end
$var reg 8 u result [7:0] $end
$upscope $end
$scope module mux4sign $end
$var wire 1 4 select $end
$var wire 8 v data2 [7:0] $end
$var wire 8 w data1 [7:0] $end
$var reg 8 x result [7:0] $end
$upscope $end
$scope module pc1 $end
$var wire 1 ? BUSYWAIT $end
$var wire 1 * CLK $end
$var wire 2 y PC_SELECTOR [1:0] $end
$var wire 1 , RESET $end
$var wire 1 / ZERO $end
$var wire 32 z EXTENDED_OFFSET [31:0] $end
$var reg 32 { PC [31:0] $end
$var reg 32 | PC_Next [31:0] $end
$var reg 32 } PC_Temp [31:0] $end
$var reg 32 ~ target [31:0] $end
$var reg 32 !" temp [31:0] $end
$upscope $end
$scope module regfile $end
$var wire 1 * CLK $end
$var wire 3 "" INADDRESS [2:0] $end
$var wire 3 #" OUT1ADDRESS [2:0] $end
$var wire 3 $" OUT2ADDRESS [2:0] $end
$var wire 1 , RESET $end
$var wire 1 0 WRITE $end
$var wire 8 %" IN [7:0] $end
$var reg 8 &" OUT1 [7:0] $end
$var reg 8 '" OUT2 [7:0] $end
$var integer 32 (" i [31:0] $end
$var integer 32 )" j [31:0] $end
$upscope $end
$scope module shiftLeft1 $end
$var wire 32 *" shifted [31:0] $end
$var wire 32 +" shift [31:0] $end
$upscope $end
$scope module signEx1 $end
$var wire 8 ," toExtend [7:0] $end
$var reg 32 -" extended [31:0] $end
$upscope $end
$scope module twos_comp1 $end
$var wire 8 ." unsign [7:0] $end
$var reg 8 /" sign [7:0] $end
$upscope $end
$scope module writeSelect $end
$var wire 8 0" data1 [7:0] $end
$var wire 8 1" data2 [7:0] $end
$var wire 1 > select $end
$var reg 8 2" result [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 2"
bx 1"
bx 0"
bx /"
bx ."
bx -"
bx ,"
bx +"
bx00 *"
b1000 )"
bx ("
bx '"
bx &"
bx %"
bx $"
bx #"
bx ""
bx00 !"
bx ~
bx }
bx |
bx {
bx00 z
bx y
bx x
bx w
bx v
bx u
bx t
bx s
bx r
xq
bx p
xo
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bz c
bz b
bz a
bz `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bz L
bz K
bz J
bz I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
x?
x>
bx =
x<
bx ;
bx :
x9
bx 8
bx 7
bx 6
bx00 5
x4
bx 3
x2
bx 1
x0
x/
bx .
bx -
0,
bx +
0*
bx )
bx (
bx '
bx &
bx %
bx $
bx #
bx "
bx !
$end
#2
09
02
0q
0o
0?
b100000000 r
1,
#4
1*
#5
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
b0 !
b0 )
b0 ;
b0 {
b1000 ("
#6
b100 |
b100 }
#7
b0 !"
b0 5
b0 z
b0 *"
b0 =
b0 +"
b0 -"
b0 D
b0 ,"
b1001 C
b1001 s
b1 G
b1 $"
b0 F
b0 #"
b0 H
b0 ""
b0 E
b0 j
b1001 +
b1001 -
#8
b1001 B
b1001 S
b1001 V
b1001 Y
b1001 \
b1001 h
b1001 u
0/
0>
b0 :
b0 l
b0 y
1<
10
04
b0 A
b0 Q
b0 d
b0 k
0*
#9
b0 3
b0 t
b0 x
b0 6
b0 w
b0 '"
b0 ."
b0 7
b0 T
b0 W
b0 Z
b0 i
b0 n
b0 &"
bx1xx1 M
bx1xx1 e
bx1xx1 g
b0x00x N
b0x00x X
b0x00x _
b1001 1
b1001 %"
b1001 2"
b1001 @
b1001 R
b1001 f
b1001 m
b1001 0"
b1001 P
b1001 [
b1001 ]
b100 ~
#10
b0 .
b0 v
b0 /"
b1001 M
b1001 e
b1001 g
b0 N
b0 X
b0 _
#11
b1001 O
b1001 U
b1001 ^
#12
b100 )
b100 ;
b100 {
1*
0,
#13
b1001 !
b1000 |
b1000 }
#14
b100 !"
b100 5
b100 z
b100 *"
b1 =
b1 +"
b1 -"
b1 D
b1 ,"
b1 B
b1 S
b1 V
b1 Y
b1 \
b1 h
b1 u
b1 C
b1 s
b1 H
b1 ""
b10000000000000001 +
b10000000000000001 -
#15
b1001 7
b1001 T
b1001 W
b1001 Z
b1001 i
b1001 n
b1001 &"
b1 M
b1 e
b1 g
b1 1
b1 %"
b1 2"
b1 @
b1 R
b1 f
b1 m
b1 0"
b1 P
b1 [
b1 ]
#16
b1001 M
b1001 e
b1001 g
b1 N
b1 X
b1 _
b1100 ~
0*
#17
b1010 O
b1010 U
b1010 ^
#20
b1000 )
b1000 ;
b1000 {
1*
#21
b1 "
b1100 |
b1100 }
#22
b0 !"
b0 5
b0 z
b0 *"
b0 =
b0 +"
b0 -"
b0 D
b0 ,"
b0 H
b0 ""
b1010 E
b1010 j
b1010000000000000000000000001 +
b1010000000000000000000000001 -
#23
b1 3
b1 t
b1 x
b1 6
b1 w
b1 '"
b1 ."
bx 1
bx %"
bx 2"
1q
1?
b1 B
b1 S
b1 V
b1 Y
b1 \
b1 h
b1 u
1>
12
0<
00
#24
b11111111 .
b11111111 v
b11111111 /"
0*
#28
1*
#32
0*
#36
1*
#40
0*
#44
1*
#48
0*
#52
1*
#56
0*
#60
1*
#64
0*
#68
b1100 )
b1100 ;
b1100 {
02
1*
0q
0?
#69
b10000 |
b10000 }
#70
b0 C
b0 s
b0 G
b0 $"
b1 F
b1 #"
b1011 E
b1011 j
b1011000000000000000100000000 +
b1011000000000000000100000000 -
#71
1q
1?
b0 B
b0 S
b0 V
b0 Y
b0 \
b0 h
b0 u
12
1<
#72
b1001 3
b1001 t
b1001 x
b1001 6
b1001 w
b1001 '"
b1001 ."
b1 7
b1 T
b1 W
b1 Z
b1 i
b1 n
b1 &"
b0 N
b0 X
b0 _
b0 @
b0 R
b0 f
b0 m
b0 0"
b0 P
b0 [
b0 ]
0*
#73
b11110111 .
b11110111 v
b11110111 /"
b1 M
b1 e
b1 g
#74
b1 O
b1 U
b1 ^
#76
1*
#80
0*
#84
1*
#88
0*
#92
1*
#96
0*
#100
1*
#104
0*
#108
1*
#112
0*
#116
b10000 )
b10000 ;
b10000 {
02
1*
0q
0?
#117
b10100 |
b10100 }
#118
b1000 !"
b1000 5
b1000 z
b1000 *"
b10 =
b10 +"
b10 -"
b10 D
b10 ,"
b1 B
b1 S
b1 V
b1 Y
b1 \
b1 h
b1 u
b1 C
b1 s
b1 G
b1 $"
b0 F
b0 #"
b10 H
b10 ""
b1000 E
b1000 j
b1000000000100000000000000001 +
b1000000000100000000000000001 -
#119
1o
1?
b1001 B
b1001 S
b1001 V
b1001 Y
b1001 \
b1001 h
b1001 u
b1 N
b1 X
b1 _
19
0<
10
b1 @
b1 R
b1 f
b1 m
b1 0"
b1 P
b1 [
b1 ]
#120
b1 B
b1 S
b1 V
b1 Y
b1 \
b1 h
b1 u
b1 3
b1 t
b1 x
b1 6
b1 w
b1 '"
b1 ."
b1001 7
b1001 T
b1001 W
b1001 Z
b1001 i
b1001 n
b1001 &"
b1001 M
b1001 e
b1001 g
b1001 @
b1001 R
b1001 f
b1001 m
b1001 0"
b1001 P
b1001 [
b1001 ]
b11100 ~
0*
#121
b11111111 .
b11111111 v
b11111111 /"
b1 @
b1 R
b1 f
b1 m
b1 0"
b1 P
b1 [
b1 ]
#122
b1010 O
b1010 U
b1010 ^
#124
1*
#125
bx #
#128
0*
#132
1*
#133
bx #
#136
0*
#140
1*
#141
bx #
#144
0*
#148
1*
#149
bx #
#152
0*
#156
1*
#157
bx #
#160
0*
#164
b10100 )
b10100 ;
b10100 {
09
1*
0o
0?
b1001 1
b1001 %"
b1001 2"
b1001 8
b1001 p
b1001 1"
#165
b1001 #
b11000 |
b11000 }
#166
b1100 !"
b1100 5
b1100 z
b1100 *"
b11 =
b11 +"
b11 -"
b11 D
b11 ,"
b11 H
b11 ""
b1000000000110000000000000001 +
b1000000000110000000000000001 -
#168
b100100 ~
0*
#172
b11000 )
b11000 ;
b11000 {
1*
#173
b1001 $
b11100 |
b11100 }
#174
b10000 !"
b10000 5
b10000 z
b10000 *"
b100 =
b100 +"
b100 -"
b100 D
b100 ,"
b100 H
b100 ""
b11 E
b11 j
b11000001000000000000000001 +
b11000001000000000000000001 -
#175
b1010 1
b1010 %"
b1010 2"
b11111111 B
b11111111 S
b11111111 V
b11111111 Y
b11111111 \
b11111111 h
b11111111 u
b11111111 3
b11111111 t
b11111111 x
b1010 @
b1010 R
b1010 f
b1010 m
b1010 0"
0>
14
b1 A
b1 Q
b1 d
b1 k
#176
b11111111 M
b11111111 e
b11111111 g
b1001 N
b1001 X
b1001 _
b11111111 P
b11111111 [
b11111111 ]
b101100 ~
0*
#177
b1000 1
b1000 %"
b1000 2"
b1000 @
b1000 R
b1000 f
b1000 m
b1000 0"
b1000 O
b1000 U
b1000 ^
#180
b11100 )
b11100 ;
b11100 {
1*
#181
b1000 %
b100000 |
b100000 }
#182
b0 !"
b0 5
b0 z
b0 *"
b0 =
b0 +"
b0 -"
b0 D
b0 ,"
b10 C
b10 s
b10 G
b10 $"
b100 F
b100 #"
b0 H
b0 ""
b1011 E
b1011 j
b1011000000000000010000000010 +
b1011000000000000010000000010 -
#183
b1001 6
b1001 w
b1001 '"
b1001 ."
b1000 7
b1000 T
b1000 W
b1000 Z
b1000 i
b1000 n
b1000 &"
1q
1?
b10 B
b10 S
b10 V
b10 Y
b10 \
b10 h
b10 u
b1001 3
b1001 t
b1001 x
b1001 1
b1001 %"
b1001 2"
b11111111 @
b11111111 R
b11111111 f
b11111111 m
b11111111 0"
1>
12
1<
00
04
b0 A
b0 Q
b0 d
b0 k
#184
b11110111 .
b11110111 v
b11110111 /"
b1010 M
b1010 e
b1010 g
b0 N
b0 X
b0 _
b10 @
b10 R
b10 f
b10 m
b10 0"
b10 P
b10 [
b10 ]
b100000 ~
0*
#185
b1010 O
b1010 U
b1010 ^
#188
1*
#192
0*
#196
1*
#200
0*
#204
1*
#208
0*
#212
1*
#216
0*
#220
1*
#224
0*
#228
b100000 )
b100000 ;
b100000 {
02
1*
0q
0?
#229
b100100 |
b100100 }
#230
b10100 !"
b10100 5
b10100 z
b10100 *"
b101 =
b101 +"
b101 -"
b101 D
b101 ,"
b0 F
b0 #"
b101 H
b101 ""
b1001 E
b1001 j
b1001000001010000000000000010 +
b1001000001010000000000000010 -
#231
1o
1?
19
10
#232
b1001 7
b1001 T
b1001 W
b1001 Z
b1001 i
b1001 n
b1001 &"
b111000 ~
0*
#233
b1011 M
b1011 e
b1011 g
#234
b1011 O
b1011 U
b1011 ^
#236
1*
#237
b1001 &
#240
0*
#244
1*
#245
b1001 &
#248
0*
#252
1*
#253
b1001 &
#256
0*
#260
1*
#261
b1001 &
#264
0*
#268
1*
#269
b1001 &
#272
0*
#276
b100100 )
b100100 ;
b100100 {
09
1*
0o
0?
b1000 1
b1000 %"
b1000 2"
b1000 8
b1000 p
b1000 1"
#277
b1000 &
b101000 |
b101000 }
#278
b0 !"
b0 5
b0 z
b0 *"
b0 =
b0 +"
b0 -"
b0 D
b0 ,"
b100000 B
b100000 S
b100000 V
b100000 Y
b100000 \
b100000 h
b100000 u
b100000 C
b100000 s
b0 G
b0 $"
b100 F
b100 #"
b0 H
b0 ""
b1011 E
b1011 j
b1011000000000000010000100000 +
b1011000000000000010000100000 -
#279
b1000 7
b1000 T
b1000 W
b1000 Z
b1000 i
b1000 n
b1000 &"
1q
1?
b101001 M
b101001 e
b101001 g
12
00
b100000 @
b100000 R
b100000 f
b100000 m
b100000 0"
b100000 P
b100000 [
b100000 ]
#280
b101000 M
b101000 e
b101000 g
b101000 ~
0*
#281
b101000 O
b101000 U
b101000 ^
#284
1*
#288
0*
#292
1*
#296
0*
#300
1*
#304
0*
#308
1*
#312
0*
#316
1*
#320
0*
#324
b101000 )
b101000 ;
b101000 {
02
1*
0q
0?
#325
b101100 |
b101100 }
#326
b11000 !"
b11000 5
b11000 z
b11000 *"
b110 =
b110 +"
b110 -"
b110 D
b110 ,"
b0 F
b0 #"
b110 H
b110 ""
b1001 E
b1001 j
b1001000001100000000000100000 +
b1001000001100000000000100000 -
#327
1o
1?
19
10
#328
b1001 7
b1001 T
b1001 W
b1001 Z
b1001 i
b1001 n
b1001 &"
b1000100 ~
0*
#329
b101001 M
b101001 e
b101001 g
#330
b101001 O
b101001 U
b101001 ^
#332
1*
#333
b1000 '
#336
0*
#340
1*
#341
b1000 '
#344
0*
#348
1*
#349
b1000 '
#352
0*
#356
1*
#357
b1000 '
#360
0*
#364
1*
#365
b1000 '
#368
0*
#372
b101100 )
b101100 ;
b101100 {
09
1*
0o
0?
#373
b1000 '
b110000 |
b110000 }
#374
bx D
bx ,"
bx B
bx S
bx V
bx Y
bx \
bx h
bx u
bx C
bx s
bx G
bx $"
bx F
bx #"
bx H
bx ""
bx E
bx j
bx +
bx -
#375
bx1xx1 M
bx1xx1 e
bx1xx1 g
b0x00x N
b0x00x X
b0x00x _
bx @
bx R
bx f
bx m
bx 0"
bx P
bx [
bx ]
#376
bx 3
bx t
bx x
bx 6
bx w
bx '"
bx ."
bx 7
bx T
bx W
bx Z
bx i
bx n
bx &"
bx O
bx U
bx ^
0*
#377
bx .
bx v
bx /"
bx M
bx e
bx g
bx N
bx X
bx _
#380
b110000 )
b110000 ;
b110000 {
1*
#381
b110100 |
b110100 }
#384
0*
#388
b110100 )
b110100 ;
b110100 {
1*
#389
b111000 |
b111000 }
#392
0*
#396
b111000 )
b111000 ;
b111000 {
1*
#397
b111100 |
b111100 }
#400
0*
#404
b111100 )
b111100 ;
b111100 {
1*
#405
b1000000 |
b1000000 }
#408
0*
#412
b1000000 )
b1000000 ;
b1000000 {
1*
#413
b1000100 |
b1000100 }
#416
0*
#420
b1000100 )
b1000100 ;
b1000100 {
1*
#421
b1001000 |
b1001000 }
#424
0*
#428
b1001000 )
b1001000 ;
b1001000 {
1*
#429
b1001100 |
b1001100 }
#432
0*
#436
b1001100 )
b1001100 ;
b1001100 {
1*
#437
b1010000 |
b1010000 }
#440
0*
#444
b1010000 )
b1010000 ;
b1010000 {
1*
#445
b1010100 |
b1010100 }
#448
0*
#452
b1010100 )
b1010100 ;
b1010100 {
1*
#453
b1011000 |
b1011000 }
#456
0*
#460
b1011000 )
b1011000 ;
b1011000 {
1*
#461
b1011100 |
b1011100 }
#464
0*
#468
b1011100 )
b1011100 ;
b1011100 {
1*
#469
b1100000 |
b1100000 }
#472
0*
#476
b1100000 )
b1100000 ;
b1100000 {
1*
#477
b1100100 |
b1100100 }
#480
0*
#484
b1100100 )
b1100100 ;
b1100100 {
1*
#485
b1101000 |
b1101000 }
#488
0*
#492
b1101000 )
b1101000 ;
b1101000 {
1*
#493
b1101100 |
b1101100 }
#496
0*
#500
b1101100 )
b1101100 ;
b1101100 {
1*
#501
b1110000 |
b1110000 }
#504
0*
#508
b1110000 )
b1110000 ;
b1110000 {
1*
#509
b1110100 |
b1110100 }
#512
0*
